
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

//-Функция возвращает остаток по номенклатуре, в качесте отбора передаем номенклатуру
Функция ПолучитьОстатокПоНоменклатуре(Номенклатура) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ТоварыОстатки.Номенклатура,
	|	ТоварыОстатки.КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.Товары.Остатки(, Номенклатура = &Номенклатура) КАК ТоварыОстатки";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество() > 0 Тогда
		Возврат Результат[0].КоличествоОстаток;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции // ПолучитьОстатокПоНоменклатуре()

// Получает остатки товаров по указанной номенклатуре на заданную дату по списку складов.
//
// Параметры:
//   Номенклатура - СправочникСсылка.Номенклатура - номенклатура, для которой получаются остатки
//   Склады - Массив из Строка- список складов, по которым необходимо получить остатки
//   Дата - Дата - дата, на которую необходимо получить остатки
//
// Возвращаемое значение:
//   Соответствие - соответствие, где ключами являются Строка, а значениями - Число количество остатков на указанную дату
//@skip-check doc-comment-collection-item-type
Функция ПолучитьОстатокПоСкладам(Номенклатура, Склады, Дата) Экспорт



    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   ТоварыОстатки.Склад,
    |   ТоварыОстатки.КоличествоОстаток
    |ИЗ
    |   РегистрНакопления.Товары.Остатки(&Дата, Номенклатура = &Номенклатура и Склад В (&Склады)) КАК ТоварыОстатки";
    Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
    Запрос.УстановитьПараметр("Дата", Дата);
    Запрос.УстановитьПараметр("Склады", Склады);
    Выборка = Запрос.Выполнить().Выбрать();
    
    СоответствиеОстатков = Новый Соответствие;
    Пока Выборка.Следующий() Цикл
        СоответствиеОстатков.Вставить(Выборка.Склад, Выборка.КоличествоОстаток);
    КонецЦикла;
    
    Возврат СоответствиеОстатков;

		
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

// Код процедур и функций

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Код процедур и функций

#КонецОбласти

#КонецЕсли
